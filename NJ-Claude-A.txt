To generate a phylogenetic tree for these sequences, we'll need to perform a few steps:

Align the sequences
Calculate genetic distances
Use a tree-building algorithm

For this task, we'll use Python with the Biopython library, which provides tools for working with biological sequences and phylogenetic analysis. Here's a script that will generate a simple phylogenetic tree using the UPGMA (Unweighted Pair Group Method with Arithmetic Mean) algorithm:
Python script to generate a phylogenetic treeClick to open code
from Bio import SeqIO, Phylo
from Bio.Seq import Seq
from Bio.SeqRecord import SeqRecord
from Bio.Align import MultipleSeqAlignment
from Bio.Phylo.TreeConstruction import DistanceCalculator, DistanceTreeConstructor
from io import StringIO

# Input sequences
sequences = {
    "seq1": "CGGTTAGCCTATTCTTTCTCACGGGACTTCCCAAAGGTAAGCTTTTCAGG",
    "seq2": "CGGTTAGCGTGTTCTTGCTCACGGGACCTGCGAAAGGTAAGCCTGTCACG",
    "seq3": "AACCGTGAAACGACCCCCTCCTCATGCCTAACCAGCGCGAGCGGCCCGCG",
    "seq4": "AAACATGCATCGTTCCTCCACTCATGGCCAACCAACCAGGGCGTCCCGGA",
    "seq5": "ATGCGTGCCGAGTCCGACTCCGGGTCACCCGTTCACGTTAACGTCTCCGG"
}

# Create SeqRecord objects
records = [SeqRecord(Seq(seq), id=name) for name, seq in sequences.items()]

# Create a multiple sequence alignment
align = MultipleSeqAlignment(records)

# Calculate the distance matrix
calculator = DistanceCalculator('identity')
dm = calculator.get_distance(align)

# Construct the phylogenetic tree using UPGMA algorithm
constructor = DistanceTreeConstructor()
tree = constructor.upgma(dm)

# Draw the tree
Phylo.draw_ascii(tree)

# Save the tree in Newick format
tree_io = StringIO()
Phylo.write(tree, tree_io, "newick")
newick_tree = tree_io.getvalue()

print("\nNewick format tree:")
print(newick_tree)
This script does the following:

Imports necessary modules from Biopython
Defines the input sequences
Creates SeqRecord objects for each sequence
Performs a simple multiple sequence alignment
Calculates a distance matrix using the 'identity' method
Constructs a phylogenetic tree using the UPGMA algorithm
Draws an ASCII representation of the tree
Saves the tree in Newick format

To run this script, you'll need to have Biopython installed. You can install it using pip:
Copypip install biopython
When you run the script, it will output an ASCII representation of the phylogenetic tree and the tree in Newick format.
Please note that this is a basic approach to generating a phylogenetic tree. For more accurate results, you might want to consider:

Using more sophisticated alignment methods (e.g., MUSCLE or Clustal Omega)
Employing more advanced tree-building algorithms (e.g., Neighbor-Joining or Maximum Likelihood)
Using longer sequences or more genetic information

Would you like me to explain any part of the code or process in more detail?